<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>
        <variable
            name="myViewModel"
            type="com.blueradix.android.jetpack_3_databinding.ui.main.MainViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/main"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.main.MainFragment">

        <!--remove the following line to use binding expressions
            android:text="@string/mainfragment"
            remember that the result value only need one-way binding, it only shows the result, it
            can't be updated by the user manually, only by the viewModel, specially when the device
            gets rotated.

            now using Binding expression: -->
        <TextView
            android:id="@+id/resultTextView"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="40dp"
            android:layout_marginEnd="8dp"
            android:gravity="center"

            android:text = '@{safeUnbox(myViewModel.result) == 0.0 ? "Enter value" : String.valueOf(safeUnbox(myViewModel.result))}'
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textInputLayout3" />

        <!-- Now we will add the onClick method to trigger an event, but this time using binding expressions       -->
        <Button
            android:id="@+id/convertButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="40dp"
            android:layout_marginEnd="8dp"
            android:text="@string/convert"
            android:onClick="@{() -> myViewModel.convertValue()}"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/resultTextView" />

        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/textInputLayout3"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="56dp"
            android:layout_marginEnd="8dp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">
            <!-- On the other hand the dollarInputEditText needs a two-way binding
                can be updated by the user, and by the viewModel specially when the
                device gets rotated. compare the difference when setting the text property-->
            <com.google.android.material.textfield.TextInputEditText
                android:id="@+id/dollarInputEditText"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="Amount"
                android:text="@={myViewModel.dollarValue}"
                android:inputType="numberDecimal" />
        </com.google.android.material.textfield.TextInputLayout>

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>